name: CI/CD Pipeline

on:
  push:
    branches: [main, feature-*]
    tags: ["v*"]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag (e.g., v1.0.0, v2.1.0)"
        required: false
        default: "latest"
        type: string

env:
  DOCKER_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || inputs.version || 'latest' }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:5.0
        ports: [27017:27017]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install backend dependencies
        run: cd backend && npm ci
      - name: Install frontend dependencies
        run: cd frontend && npm ci
      - name: Run backend tests
        run: cd backend && npm test
        env:
          JWT_SECRET: testsecret
      - name: Security scan backend
        run: cd backend && npm audit --audit-level=high || true
      - name: Security scan frontend
        run: cd frontend && npm audit --audit-level=high || true
      - name: Build backend Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/gigmatch-backend:${{ env.DOCKER_VERSION }} ./backend
      - name: Scan backend Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/gigmatch-backend:${{ env.DOCKER_VERSION }}
          severity: "HIGH,CRITICAL"
      - name: Build frontend Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/gigmatch-frontend:${{ env.DOCKER_VERSION }} ./frontend
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push backend Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/gigmatch-backend:${{ env.DOCKER_VERSION }}git
      - name: Push frontend Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/gigmatch-frontend:${{ env.DOCKER_VERSION }}
